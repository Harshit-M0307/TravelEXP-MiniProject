# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-L0fmU7VqVcOiViJWmf_S9bHY-i7JJz3
"""

# Import necessary libraries
import os
import streamlit as st
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

df = pd.read_csv('travel_data_up.csv')
df['features'] = df['Type'] + " " + df['Description']

vectorizer = TfidfVectorizer(stop_words='english')
tfidf_matrix = vectorizer.fit_transform(df['features'])
cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)

# Recommendation function
def recommend(destination_name, top_n=3):
    if destination_name not in df['Destination'].values:
        return []

    idx = df[df['Destination'] == destination_name].index[0]
    scores = list(enumerate(cosine_sim[idx]))
    scores = sorted(scores, key=lambda x: x[1], reverse=True)
    scores = scores[1:top_n+1]

    recommended = [df.iloc[i[0]] for i in scores]
    return recommended

# Streamlit UI
st.set_page_config(page_title="Travel Recommender", layout="centered")

st.title("üåç Travel Recommendation System")
st.markdown("Discover new destinations based on your favorite spot!")

selected = st.selectbox("Choose a destination you like:", df['Destination'].values)

if st.button("Recommend Similar Places"):
    recs = recommend(selected)
    if recs:
        for rec in recs:
            st.subheader(rec['Destination'] + f" ({rec['Country']})")
            st.markdown(f"*Type:* **{rec['Type']}**")
            st.markdown(f"*About:* {rec['Description']}")
            st.image(rec['Images'],caption=rec['Destination'])
            st.markdown("---")



    else:
        st.error("No recommendations found.")

